# -*- coding: utf-8 -*-
"""ok_modified_derby_E.b.Shows.difference.between.different.time.frame.emas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18J26PRvjEKCOahJeCFLQWqscxDKrhBV9
"""

# Install necessary packages
import subprocess
import sys

def install(package):
    subprocess.check_call([sys.executable, "-m", "pip", "install", package])

packages = ["numpy", "pandas", "yfinance", "seaborn", "matplotlib", "scipy", "mplfinance"]
for package in packages:
    try:
        __import__(package)
    except ImportError:
        install(package)

import os
import numpy as np
import pandas as pd
import yfinance as yf
import seaborn as sns
import matplotlib.pyplot as plt
from datetime import datetime

def plot_ema_differences(ticker, start_date="2020-01-01", end_date="2021-01-01"):
    """Main function to plot the differences between specific EMAs using Seaborn."""

    df = fetch_or_load_data(ticker, start_date, end_date)

    # Calculate specific EMAs
    ema_periods = [9, 50, 100, 200, 300]
    for ema_period in ema_periods:
        df[f'EMA_{ema_period}'] = df['Close'].ewm(span=ema_period, adjust=False).mean()

    # Calculate and plot differences for specified EMA pairs
    ema_pairs = [(50, 100), (100, 200), (200, 300)]
    plt.figure(figsize=(12, 6))
    for ema1, ema2 in ema_pairs:
        diff_col_name = f'{ema1}-{ema2} EMA Difference'
        df[diff_col_name] = df[f'EMA_{ema1}'] - df[f'EMA_{ema2}']
        sns.lineplot(data=df[diff_col_name], label=f'{ema1}-{ema2} EMA Difference')

    plt.title(f'Differences Between Specific EMAs for {ticker}')
    plt.xlabel('Date')
    plt.ylabel('Difference')
    plt.legend()
    plt.grid(True)

    plt.show()

def fetch_or_load_data(ticker, start_date, end_date):
    """Fetches the data for a given ticker and date range. If local CSV for today's date exists, data is read from it.
    Otherwise, it is fetched online and saved locally."""

    folder_path = "./data"
    if not os.path.exists(folder_path):
        os.makedirs(folder_path)
    today_str = datetime.today().strftime('%d_%m_%Y')
    file_name = f"{ticker}_{today_str}.csv"
    file_path = os.path.join(folder_path, file_name)

    if os.path.exists(file_path):
        data = pd.read_csv(file_path, index_col='Date', parse_dates=True)
    else:
        data = yf.download(ticker, start=start_date, end=end_date)
        data.to_csv(file_path)

    return data

# Sample call for visualization:
plot_ema_differences('TSLA', start_date="2023-01-01", end_date="2024-01-01")





